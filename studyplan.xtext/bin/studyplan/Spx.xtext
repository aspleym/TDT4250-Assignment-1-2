// automatically generated by Xtext
grammar assignment2.Spx with org.eclipse.xtext.common.Terminals

import "platform:/resource/TDT4250 - Assignment 2/model/sp.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Department returns Department:
	'Department'
	name=EString
	'{'
		'programmes' '{' programmes+=Programme ( "," programmes+=Programme)* '}' 
		('courses' '{' courses+=Course ( "," courses+=Course)* '}' )?
	'}';







EString returns ecore::EString:
	STRING | ID;

Programme returns Programme:
	'Programme'
	name=EString
	'{'
		'numberOfYears' numberOfYears=EInt
		('specialisations' '{' specialisations+=Specialisation ( "," specialisations+=Specialisation)* '}' )?
		'years' '{' years+=Year ( "," years+=Year)* '}' 
	'}';

Course returns Course:
	{Course}
	'Course'
	name=EString
	'{'
		('code' code=CourseCode)?
		('credit' credit=EFloat)?
		('level' level=EInt)?
	'}';

Specialisation returns Specialisation:
	{Specialisation}
	'Specialisation'
	name=EString
	'{'
		('secondSpesialisations' '(' secondSpesialisations+=[Specialisation|EString] ( "," secondSpesialisations+=[Specialisation|EString])* ')' )?
		('years' '{' years+=Year ( "," years+=Year)* '}' )?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

Year returns Year:
	'Year'
	'{'
		('number' number=EInt)?
		'semesters' '{' semesters+=Semester ( "," semesters+=Semester)* '}' 
	'}';

Semester returns Semester:
	'Semester'
	'{'
		'number' number=EInt
		'courses' '{' courses+=CourseInSemester ( "," courses+=CourseInSemester)* '}' 
	'}';

CourseInSemester returns CourseInSemester:
	mandatory?='mandatory'
	'CourseInSemester'
	'{'
		'course' course=[Course|EString]
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

CourseCode returns CourseCode:
	'CourseCode' /* TODO: implement this rule and an appropriate IValueConverter */;

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;
